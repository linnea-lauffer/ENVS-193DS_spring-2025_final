---
title: "ENVS-193DS_spring-2025_final"
author: "Linnea Lauffer"
date: "2025-06-10"
format:
  html:
    toc: true
    toc-location: left
    toc-float: true
---

**GitHub Repository:** [https://github.com/linnea-lauffer/ENVS-193DS_spring-2025_final.git](https://github.com/linnea-lauffer/ENVS-193DS_spring-2025_final.git)

# Set Up

```{R}
#| message: false # use this to make sure messages don't show up
#| warning: false # use this to make sure warnings don't show up

# load packages 
library(tidyverse) # general use
library(janitor) # cleaning data frames
library(here) # file organization
library(DHARMa) # check diagnostics 
library(MuMIn) # model selection
library(ggeffects) # getting model predictions

# read in data
sst <- read_csv(here("data", "SST_update2023.csv"))
nest_boxes <- read_csv(here("data", "occdist.csv"))
```

# 1. Research Writing

## a. Transparent Statistical Methods

In part 1, they used a Pearson's correlation test to determine if there is a statistically significant correlation between distance from headwater(km) and annual total nitrogen load(kg year^-1^). 

In part 2, they used a one-way ANOVA to test whether there is a statistically significant difference in average nitrogen load(kg year^-1^) among different nitrogen sources(urban land, atmospheric deposition, fertilizer wastewater treatment, and grasslands). 

## b. More Information Needed

One statistic that should be included is the F-statistic. This is the test statistic for ANOVA that is the ratio of between group variance to within group variance. The F distribution can be used to evaluate significance, and would provide more context.    

Another test that should be included is a Tukey Honestly Significant Difference (HSD) test. This would tell which groups are actually different when you compare them. ANOVA only indicates whether at least one group differs from the others. The Tukey's HSD would provide more detail. 

## c. Suggestions for rewriting

Part 1: We rejected the null hypothesis that there is no correlation between distance from headwater(km) and annual total nitrogen load(kg year^-1^) (Pearson's r=unknown, p=0.02, $\alpha$=unknown). 

Part 2: We rejected the null hypothesis that there is no difference in average nitrogen load(kg year^-1^) between sources(urban land, atmospheric deposition, fertilizer, wastewater treatment, and grasslands) (one-way ANOVA, F = unknown, degrees of freedom = unknown, p=0.02, $\alpha$ = unknown). On average, [unknown source] tend to have a higher average nitrogen load(kg year^-1^) (difference unknown, 95% CI: unknown).

# 2. Data Visualization

## a. Cleaning and Summarizing

```{R}
#| message: false # use this to make sure messages don't show up
#| warning: false # use this to make sure warnings don't show up

# clean and transform sst data frame
sst_clean <- sst |> 
  mutate(
    year = factor(year(date), levels = as.character(2018:2023)), 
    month = factor(month(date), levels = 1:12, labels = month.abb, ordered = TRUE)
  ) |> 
  filter(year %in% as.character(2018:2023)) |>  # keep data from 2018-2023
  group_by(year, month) |>                      # group by year and month
  summarise(mean_monthly_sst = mean(temp, na.rm = TRUE), .groups = "drop") |>  # calculate mean temp for each group
  arrange(year, month) |>                        # arrange by year ascending and month order
  mutate(year = factor(year, levels = sort(unique(year))))  # ensure year is factor with sorted levels
 

sst_clean |> slice_sample(n = 5) # display 5 rows from the cleaned data
str(sst_clean) # display the structure of the dataset
```


## b. Visualize the Data

```{R}
#| message: false # use this to make sure messages don't show up
#| warning: false # use this to make sure warnings don't show up

ggplot(data = sst_clean, # starting data frame
       aes( x = month, # x-axis is month
            y = mean_monthly_sst, # y-axis is mean monthly sea surface temperature 
            group = year, # group points into a line by year
            color = year)) + # color each line by year
  geom_line() + # add lines
  geom_point() + # add points for each month's mean temp
  scale_color_brewer(name = "Year", palette = "Reds") + # color pallete 
  labs( x = "Month", # rename x-axis
        y = "Mean monthly sea surface temperature (ÂºC)") + # rename y-axis
  theme_minimal() + # clean theme
  theme(panel.background = element_rect(fill = "white", color = "black"), # white background with black border 
        panel.grid = element_blank(), # remove gridlines
        legend.position = c(0.1, 0.75), # position legend to the left 
        axis.ticks = element_line(color = "black")) # add tick marks
```


# 3. Data Analysis

## a. Response Variable

In this data set, the 1s and 0s represent whether a nest box was occupied by a specific species. A value of 1 means that the box was occupied by the indicated species (for example sp = 1 for swift parrot), and a value of 0 means it was occupied by another species or left empty depending on the variable. 

## b. Purpose of Study

The main difference between Swift Parrots and the other two species is that Swift Parrots are critically endangered and they rarely breed in the same location in successive years. As a result, nontarget birds such as Common Starlings and Tree Martins can learn to identify permanently deployed nest boxes as a resource.

## c. Difference in "Seasons"

The data is presented from the summer breeding seasons of 2016 and 2019, when parrots bred at the study area, triggered by a mast tree flowering event. In 2016, the nest boxes were newly deployed and in 2019 the boxes still remained from 2016. 

## d. Table of Models

4 models total:

| Model number | Season | Distance to forest edge | Model description           |
|:------------:|:------:|:-----------------------:|---------------------------- |
| 0            |        |                         | no predictors (null model)  |
| 1            |    X   |            X            | all predictors (full model) |
| 2            |    X   |                         | season only                 |
| 3            |        |            X            | distance to forest edge only|

## e. Run the Models

```{R}
nest_boxes_clean <- nest_boxes  |> # starting data frame
  clean_names() |> # clean column names
  mutate(season = as_factor(season))

# model 0: null model
model0 <- glm(
  sp ~ 1, # formula
  data = nest_boxes_clean, # data frame
  family = "binomial" # for binary data
)

# model 1: all predictors
model1 <- glm(
  sp ~ season + edge_distance, # formula
  data = nest_boxes_clean, # data frame
  family = "binomial" # for binary data
)

# model 2: season only
model2 <- glm(
  sp ~ season, # formula
  data = nest_boxes_clean, # data frame
  family = "binomial" # for binary data 
)

# model 3: distance to forest edge only
model3 <- glm(
  sp ~ edge_distance, # formula
  data = nest_boxes_clean, # data frame
  family = "binomial" # for binary data
)
```


## f. Check the diagnositics 

```{R}
#| message: false # use this to make sure messages don't show up
#| warning: false # use this to make sure warnings don't show up

plot(simulateResiduals(model0)) # generate and plot simulated residuals for model0
plot(simulateResiduals(model1)) # generate and plot simulated residuals for model1
plot(simulateResiduals(model2)) # generate and plot simulated residuals for model2 
plot(simulateResiduals(model3)) # generate and plot simulated residuals for model3
```

## g. Select the Best Model

```{R}
# compare AICc for the following models
AICc(model0,
     model1,
     model2,
     model3) |> 
  # arranging output in descending order of AIC
  arrange(AICc)
```

The best model as determined by Akaike's Information Criterion (AIC) included both season and distance to forest edge (model1) as predictors of Swift Parrot nest box occupancy (AICc = 226.31). 

## h. Visualize the Model Predictions

```{r}
#| message: false # use this to make sure messages don't show up
#| warning: false # use this to make sure warnings don't show up

model1_predictions <- ggpredict(
  model1, # model object
  terms = c("edge_distance", "season") # predictors
) |> 
  # treating this like a regular data frame
  # renaming the columns
  rename(edge_distance = x,
         season = group) |> 
  # making sure that object is recognized as data frame
  as.data.frame() |> 
  # making sure that season is a factor with 2 levels: 2016 and 2019
  mutate(season = fct_relevel(season, "2016", "2019"))

# base layer: ggplot
ggplot(nest_boxes_clean, # starting data frame 
       aes(x = edge_distance, # x-axis
           y = sp, # y-axis
           color = season)) + # color points by season
  geom_point(size = 2, # add observed data points 
             alpha = 0.4) + # make them semi-transparent
  geom_ribbon(data = model1_predictions, # add 95% CI
                  aes(x = edge_distance,
                      ymin = conf.low, # lower bound of 95% CI
                      ymax = conf.high, # upper bound of 95% CI
                      fill = season), # fill by season
              alpha = 0.4,
              inherit.aes = FALSE) +
  geom_line(data = model1_predictions, # add predicted probability of occupancy 
            aes(x = edge_distance, # 
                y = predicted, # predicted proabilty
                color = season)) + # color by seasons
  # manually setting colors
  scale_color_manual(values = c("2016" = "orchid", "2019" = "orange")) + # custom colors
  scale_fill_manual(values = c("2016" = "orchid", "2019" = "orange")) + # custom 95% CI to match 
  # labelling x- and y-axis
  labs(x = "Distance to Forest Edge (m)", # relabel x-axis
       y = "Probability of Nest Box Occupancy", # relabel y-axis
       title = "Predicted Nest Box Occupancy By Swift Parrots", # title
       color = "Season", # legend title
       fill = "Season") +
  # clean up theme
  theme_minimal() +
  theme(panel.grid = element_blank()) # remove gridlines
```


## i. Write a Caption for Figure 

**Figure 1. Predicted probability of Swift Parrot nest box occupancy as a function of distance to forest edge in two breeding seasons (2016 and 2019).** Points represent observed occupancy (1 = occupied by Swift Parrot, 0 = not occupied), with color indicating breeding season. The solid lines show predicted probabilities from the best model, model1, which includes both season and edge distance as predictors. Shaded ribbons represent 95% confidence intervals around predictions. 
Data source: Stojanovic, Dejan et al. (2021). Do nest boxes breed the target species or its competitors? A case study of a critically endangered bird [Dataset]. Dryad. https://doi.org/10.5061/dryad.83bk3j9sb

## j. Calculate Model Predictions

```{R}
predicted_probabilities <- ggpredict(
  model1,
  terms = c("edge_distance [0,900]", "season")
)

print(predicted_probabilities)
```


## k. Interpret Results

The predicted probability of Swift Parrot nest box occupancy is highest at the forest edge (0 m) and decreases further away (900 m) in both breeding seasons. At the forest edge (0 m), the probability of Swift Parrot nest box occupancy was 0.48(95% CI [0.33, 0.64]) in 2016 and 0.30(95% CI [0.18, 0.44]). At 900 m from the forest edge, occupancy dropped to 0.12(95% CI [0.06, 0.24]) in 2016 and 0.06(95% CI [0.03, 0.13]).This negative relationship between distance from the forest edge and occupancy probability suggests that Swift Parrots prefer nesting sites closer to forest edges. This pattern contrasts with Tree Martins, which showed increased occupancy farther from forest edges, suggesting species-specific habitat preferences likely shaped by competition or resource distribution.  

# 4. Affective and Exploratory Visualizations

## a. Comparing Visualizations

**How are the visualizations different from each other in the way you have represented your data?**

My exploratory visualizations from Homework 2 used boxplots to compare distributions of total sleep across different levels of predictors (work night and caffeine intake). These were statistical and straightforward visualizations to explore possible relationships in my data. My affective visualization from Homework 3 is a visual metaphor, using color, layout, and visual elements to highlight patterns in a more engaging and personal way. 

**What similarities do you see between all your visualizations?**

All of my visualizations represent hours of sleep on the y-axis, even though in Homework 2 it was clearly labeled as such, while in Homework 3 it was unlabeled equal to tree height. In all of my visualizations, total sleep is shown across different predictor variables.

**What patterns do you see in each visualization? are these different visualizations? If so, why? If not, why not?**

In Homework 2, the boxplot comparing work nights showed I actually got more sleep on work nights, which was unexpected, and for caffeine, I couldnât yet distinguish any meaningful differences in sleep, likely due to limited data. In Homework 3, no clear pattern stood out, but sleep on work nights appeared slightly more consistent overall. The difference in patterns between the visualizations may be due to the affective visualization focusing more on storytelling than statistical clarity.

**What kinds of feedback did you get during week 9 in workshop of from the instructors? How did you implement or try those suggestions? If you tried and kept those suggestions, explain how and why; if not, explain why not.**

Since I had used my extension for Homework 3, I didnât have my affective visualization ready for Week 9, so I only reviewed other students' projects. But in Week 10, I received feedback that my affective visualization was fun and that the categorizations I used were engaging and unique.